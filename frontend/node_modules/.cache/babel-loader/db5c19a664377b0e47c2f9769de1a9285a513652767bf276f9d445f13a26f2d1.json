{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    // async registerUser() {\n    //   try {\n    //     const response = await axios.post(\"http://localhost:8000/register\", {\n    //       username: this.username,\n    //       password: this.password,\n    //     });\n    //     console.log(response);\n    //   } catch (error) {\n    //     console.log(error.response.data.detail);\n    //   }\n    // },\n    //\n    // async loginUser() {\n    //   try {\n    //     const response = await axios.post(\"http://localhost:8000/login\", {\n    //       username: this.username,\n    //       password: this.password,\n    //     });\n    //     console.log(response);\n    //   } catch (error) {\n    //     console.log(error.response.data.detail);\n    //   }\n    // },\n    async registerUser() {\n      try {\n        const response = await axios.post(\"http://localhost:8000/register\", {\n          username: this.username,\n          password: this.password\n        });\n        console.log(response);\n      } catch (error) {\n        try {\n          console.log(error.response.data.detail);\n        } catch (e) {\n          console.log(\"An error occurred:\", e.message);\n        }\n      }\n    },\n    async loginUser() {\n      try {\n        const response = await axios.post(\"http://localhost:8000/login\", {\n          username: this.username,\n          password: this.password\n        });\n        console.log(response);\n      } catch (error) {\n        try {\n          console.log(error.response.data.detail);\n        } catch (e) {\n          console.log(\"An error occurred:\", e.message);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","password","methods","registerUser","response","post","console","log","error","detail","e","message","loginUser"],"sources":["/Users/zhaobin/Documents/WorkspaceP/fast_login_db/login_reg_frontend/src/App.vue"],"sourcesContent":["<!--Axios是一个基于Promise的HTTP客户端,用于在浏览器和Node.js中发送HTTP请求。\n在Vue中使用Axios,可以很方便地与后端API进行交互,发送HTTP请求并获取响应数据。\n\nAxios的应用场景包括但不限于：\n获取和发送数据：通过Axios发送HTTP请求,获取和发送数据可以实现无刷新的、异步更新页面数据；\n处理HTTP请求错误：Axios可以对HTTP请求状态码进行处理并返回错误信息,方便在开发时进行调试和错误处理；\n处理请求和响应拦截器：Axios中可以设置请求和响应拦截器,对请求和响应进行统一处理,例如添加请求头、对响应\n数据进行格式化等操作；\n实现全局配置：Axios中可以实现全局的配置,例如设置默认请求头、设置超时时间、设置跨域请求等。\n总的来说,Axios在前端开发中扮演了很重要的角色,可以帮助我们方便地与后端API进行通信,实现前后端的数据交互\n和业务逻辑实现。-->\n\n<template>\n  <div>\n    <form>\n      <label>用户名:</label>\n      <input type=\"text\" v-model=\"username\">\n\n      <label>密码:</label>\n      <input type=\"password\" v-model=\"password\">\n\n      <button type=\"submit\" @click.prevent=\"registerUser\">注册</button>\n\n      <button type=\"submit\" @click.prevent=\"loginUser\">登录</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n    };\n  },\n  methods: {\n    // async registerUser() {\n    //   try {\n    //     const response = await axios.post(\"http://localhost:8000/register\", {\n    //       username: this.username,\n    //       password: this.password,\n    //     });\n    //     console.log(response);\n    //   } catch (error) {\n    //     console.log(error.response.data.detail);\n    //   }\n    // },\n    //\n    // async loginUser() {\n    //   try {\n    //     const response = await axios.post(\"http://localhost:8000/login\", {\n    //       username: this.username,\n    //       password: this.password,\n    //     });\n    //     console.log(response);\n    //   } catch (error) {\n    //     console.log(error.response.data.detail);\n    //   }\n    // },\n    async registerUser() {\n      try {\n        const response = await axios.post(\"http://localhost:8000/register\", {\n          username: this.username,\n          password: this.password,\n        });\n        console.log(response);\n      } catch (error) {\n        try {\n          console.log(error.response.data.detail);\n        } catch (e) {\n          console.log(\"An error occurred:\", e.message);\n        }\n      }\n    },\n    async loginUser() {\n      try {\n        const response = await axios.post(\"http://localhost:8000/login\", {\n          username: this.username,\n          password: this.password,\n        });\n        console.log(response);\n      } catch (error) {\n        try {\n          console.log(error.response.data.detail);\n        } catch (e) {\n          console.log(\"An error occurred:\", e.message);\n        }\n      }\n    },\n  },\n};\n</script>\n"],"mappings":"AA6BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMN,KAAK,CAACO,IAAI,CAAC,gCAAgC,EAAE;UAClEL,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACFK,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACvB,EAAE,OAAOI,KAAK,EAAE;QACd,IAAI;UACFF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACJ,QAAQ,CAACL,IAAI,CAACU,MAAM,CAAC;QACzC,EAAE,OAAOC,CAAC,EAAE;UACVJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEG,CAAC,CAACC,OAAO,CAAC;QAC9C;MACF;IACF,CAAC;IACD,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMR,QAAO,GAAI,MAAMN,KAAK,CAACO,IAAI,CAAC,6BAA6B,EAAE;UAC/DL,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACFK,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACvB,EAAE,OAAOI,KAAK,EAAE;QACd,IAAI;UACFF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACJ,QAAQ,CAACL,IAAI,CAACU,MAAM,CAAC;QACzC,EAAE,OAAOC,CAAC,EAAE;UACVJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEG,CAAC,CAACC,OAAO,CAAC;QAC9C;MACF;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}