{"ast":null,"code":"/*\n* npm install vue-router@next\n* 配置路由：在 main.js 文件中,可以配置路由以使用 Login.vue 和 Register.vue\n*\n* index.html 文件已经包含了 <div id=\"app\"></div>,所以不需要添加任何内容。这个 div 元素就是 Vue 应用程序的挂载点。\n* 当在 main.js 文件中调用 app.mount(\"#app\") 时,Vue 会查找具有 ID app 的元素,并将应用程序的根组件渲染到该元素中。\n*\n* 通过这样的配置,当用户访问不同的路由路径时,与之匹配的组件(如 Login.vue 或 Register.vue)将在 App.vue 的 <router-view /> 元素中渲染。\n* 这样做的好处是,您可以在 App.vue 中添加全局的布局或导航等元素,这些元素将在所有路由路径下保持一致,而 <router-view /> 元素则负责显示与当前路由匹配的组件。\n* */\n// 导入新的根组件\nimport App from \"./App.vue\";\n// 引入 Vue 模块和 Vue Router 模块\nimport { createApp } from \"vue\";\nimport { createRouter, createWebHistory } from \"vue-router\";\n\n// 引入 Login 和 Register 组件\nimport Login from \"./Login.vue\";\nimport Register from \"./Register.vue\";\n\n// 定义路由规则\nconst routes = [{\n  path: \"/login\",\n  component: Login\n}, {\n  path: \"/register\",\n  component: Register\n}];\n\n// 创建路由实例\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// 创建 Vue 应用实例\n// const app = createApp({});\nconst app = createApp(App);\n\n// 将路由实例添加到 Vue 应用\napp.use(router);\n\n// 关闭 Vue 应用在控制台中给出的生产提示\napp.config.productionTip = false;\n\n// 将 Vue 实例挂载到具有指定选择器的元素上\napp.mount(\"#app\");","map":{"version":3,"names":["App","createApp","createRouter","createWebHistory","Login","Register","routes","path","component","router","history","app","use","config","productionTip","mount"],"sources":["/Users/zhaobin/Documents/WorkspaceP/fast_login_db/frontend/src/main.js"],"sourcesContent":["/*\n* npm install vue-router@next\n* 配置路由：在 main.js 文件中,可以配置路由以使用 Login.vue 和 Register.vue\n*\n* index.html 文件已经包含了 <div id=\"app\"></div>,所以不需要添加任何内容。这个 div 元素就是 Vue 应用程序的挂载点。\n* 当在 main.js 文件中调用 app.mount(\"#app\") 时,Vue 会查找具有 ID app 的元素,并将应用程序的根组件渲染到该元素中。\n*\n* 通过这样的配置,当用户访问不同的路由路径时,与之匹配的组件(如 Login.vue 或 Register.vue)将在 App.vue 的 <router-view /> 元素中渲染。\n* 这样做的好处是,您可以在 App.vue 中添加全局的布局或导航等元素,这些元素将在所有路由路径下保持一致,而 <router-view /> 元素则负责显示与当前路由匹配的组件。\n* */\n// 导入新的根组件\nimport App from \"./App.vue\";\n// 引入 Vue 模块和 Vue Router 模块\nimport {createApp} from \"vue\";\nimport {createRouter, createWebHistory} from \"vue-router\";\n\n// 引入 Login 和 Register 组件\nimport Login from \"./Login.vue\";\nimport Register from \"./Register.vue\";\n\n// 定义路由规则\nconst routes = [\n    {path: \"/login\", component: Login},\n    {path: \"/register\", component: Register},\n];\n\n// 创建路由实例\nconst router = createRouter({\n    history: createWebHistory(),\n    routes,\n});\n\n// 创建 Vue 应用实例\n// const app = createApp({});\nconst app = createApp(App);\n\n// 将路由实例添加到 Vue 应用\napp.use(router);\n\n// 关闭 Vue 应用在控制台中给出的生产提示\napp.config.productionTip = false;\n\n// 将 Vue 实例挂载到具有指定选择器的元素上\napp.mount(\"#app\");\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,GAAG,MAAM,WAAW;AAC3B;AACA,SAAQC,SAAS,QAAO,KAAK;AAC7B,SAAQC,YAAY,EAAEC,gBAAgB,QAAO,YAAY;;AAEzD;AACA,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,QAAQ,MAAM,gBAAgB;;AAErC;AACA,MAAMC,MAAM,GAAG,CACX;EAACC,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAEJ;AAAK,CAAC,EAClC;EAACG,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEH;AAAQ,CAAC,CAC3C;;AAED;AACA,MAAMI,MAAM,GAAGP,YAAY,CAAC;EACxBQ,OAAO,EAAEP,gBAAgB,EAAE;EAC3BG;AACJ,CAAC,CAAC;;AAEF;AACA;AACA,MAAMK,GAAG,GAAGV,SAAS,CAACD,GAAG,CAAC;;AAE1B;AACAW,GAAG,CAACC,GAAG,CAACH,MAAM,CAAC;;AAEf;AACAE,GAAG,CAACE,MAAM,CAACC,aAAa,GAAG,KAAK;;AAEhC;AACAH,GAAG,CAACI,KAAK,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}