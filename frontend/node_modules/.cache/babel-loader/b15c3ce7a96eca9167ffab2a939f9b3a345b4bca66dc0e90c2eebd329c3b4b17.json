{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"登录|注册\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"form-container\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\"\n}, \"用户名：\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"密码：\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"button-container\"\n};\nconst _hoisted_9 = {\n  class: \"result-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    placeholder: \"请输入用户名\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    placeholder: \"请输入密码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.login && $options.login(...args))\n  }, \"登录\"), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.register && $options.register(...args))\n  }, \"注册\")]), _createElementVNode(\"p\", _hoisted_9, _toDisplayString($data.resultMsg), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","type","id","$data","username","$event","placeholder","_hoisted_6","_hoisted_7","password","_hoisted_8","onClick","_cache","args","$options","login","register","_hoisted_9","_toDisplayString","resultMsg"],"sources":["/Users/zhaobin/Documents/WorkspaceP/fast_login_db/frontend/src/AppCryptAsync.vue"],"sourcesContent":["<!--\n网页可以分为三大部分：HTML、CSS 和 JavaScript。\n如果把网页比作一个人,那么HTML相当于骨架,JavaScript相当于肌肉、CSS相当于皮肤,这三者结合起来才能形成一个完善的网页。\n\n在 Vue 中,vue 文件和 js 文件都具有不同的作用。下面是它们的区别和关联方式：\n◉ vue 文件：Vue 单文件组件是由三部分组成的,分别是 template, script 和 style。vue 文件是一个包含了\n所有这些部分的组件文件,其中的模板、样式和逻辑可以在单个文件中定义。vue 文件可以让代码更容易组织、调试和维护。\n◉ js 文件：Vue 中的js 文件主要是用来实现与数据相关处理的逻辑,如：axios请求、配置路由、Vuex状态管理等。\n◉ 关联方式：单文件组件 vue 和 js 文件是通过<script>标签进行关联的。在vue 文件中的<script> 标签中,\n使用 import 语句导入需要在该组件中使用的js文件。例如:\n<template>\n  组件的模板部分\n</template>\n\n<script>\n  导入需要在组件中使用的 .js 文件\n  import axios from 'axios';\n\n  export default {\n    组件的配置选项\n  }\n</script>\n\n<style>\n  组件样式\n</style>\n这样做可以在组件中使用导入的 .js 文件中所定义的函数、方法和变量等等。需要注意的是,.vue 文件中\n的<script>标签可以有 src 属性,用于引入外部 .js 文件,例如:\n<template>\n  组件的模板部分\n</template>\n\n<script src=\"./example.js\"></script>\n\n<style>\n  组件样式\n</style>\n在这种情况下,.vue 文件和 .js 文件将是独立的,但它们都可以使用 Vue 实例来进行交互。\n\n\n在 Vue 中,export default 用于导出一个模块的默认值。这表示该模块只有一个默认的导出值,\n可以在其他模块中使用 import 关键字来导入该模块的默认值。\n在一个 Vue 单文件组件中,通常会使用 export default 导出一个 Vue 实例对象,以便在其它组件中引用该组件。\n\n<style scoped> 是 Vue 单文件组件中的一个特殊的 <style> 标签,它的作用是将样式限定在当前组件的范围内,\n不会影响到其他组件。使用 scoped 属性,可以使得同名的样式类不会相互影响。\n\n通常情况下,在 Vue 单文件组件中的样式都是全局生效的,即一个样式声明可以影响到整个页面。这样一来,\n在多个组件中引用同名的样式类时,可能会产生冲突。而使用 scoped 属性可以将样式限定在当前组件范围内,\n因此不会与其它组件中的样式冲突,实现了样式的隔离。\n\n对于这个程序来说就是,.form-group 样式类只会影响该组件内的 div 标签,而不会影响其它组件中的 div 标签\n\n使用 async/await 关键字:\nasync 关键字用于声明该函数为异步函数,await 用于等待异步请求的结果。\n\n使用 Promise 对象:\n使用 Promise 对象来处理异步操作。axios.get() 返回一个 Promise 对象并提供 .then() 和 .catch() 方法,\n来处理异步操作的成功和失败情况。\n\n\n◉ 在 HTML 或 XML 文档中,节点(Node)是指文档树中的每一个元素、属性、文本、注释等单个部分。\n而元素(Element)是节点类型之一,是由开始标签和结束标签所包含的内容组成的部分。\n◉ 具体来说,HTML 或 XML 文档都是由多个节点组成的树结构,可以将它们看做存在于树上的节点。其中每一个节点都包含了\n一些信息,例如节点类型(元素、属性、文本、注释等)、名称、值、父节点、子节点等。这些节点可以通过DOM(文档对象模型)\n来访问和操作。\n◉ 元素是节点类型中的一种,它由开始标签和结束标签所包含的内容构成,这个开始标签包含了元素的名称和一些属性(如果有的话),\n结束标签则表示元素的结束。元素通常被用来描述文档中的结构、样式和内容等信息。\n\n\ndiv 元素是 HTML 中的块级元素,可以将其中的内容视为一个整体进行布局。通常用于将一组相关的元素进行分组,\n便于进行样式设置和操作。\n<div> 元素通常被用来表示 HTML 文档中的一个区块(block),它在页面中占据一定的空间,可以包含其他 HTML 元素。\n<div> 元素是一个容器元素,其本身并不代表任何特定类型的内容或语义,仅仅是用来划分页面布局和组织结构的一种方式。\n<div> 元素通常和 CSS 样式表一起使用,来实现页面布局和样式控制。\n\n<div> 元素作为一个通用的容器元素,可以用于在页面上分组和组织其他 HTML 元素。由于它本身不包含任何特定的语义信息,\n因此在设计 Web 页面时,使用 <div> 元素的情况可能有以下几种:\n1.组织页面布局：当我们需要将页面内容分为不同的块,并按照一定的布局方式排列时,可以使用 <div> 元素来表示每一个块。\n在实现布局时,可以通过 CSS 设置这些 <div> 元素的样式,来实现自己想要的页面效果。\n2.包含其他元素：当我们需要将多个 HTML 元素组合在一起时,可以使用 <div> 元素来作为他们的容器。例如,在一个窗口中\n展示一组按钮或文本框时,我们可以将它们放置在一个 <div> 元素中。\n3.实现 JavaScript 功能：当我们需要在 Web 页面上动态地添加、删除或修改元素时,可以使用 <div> 元素作为目标容器,\n并通过 JavaScript 代码动态地操作它。例如,在实现一个图片轮播功能时,可以将所有的图片元素放在一个 <div> 元素中,\n并通过 JavaScript 控制它们的显示与隐藏。\n需要注意的是,虽然 <div> 元素可以适用于许多场景,但是在实际编写 Web 页面时,应该根据具体的业务需求选择合适的 HTML\n元素来描述页面结构和内容。因为合理使用语义化标签可以增加页面的可读性和可访问性,也更有利于搜索引擎优化(SEO)。\n\n\n设备的视口宽度中的\"视口\"是什么？CSS媒体查询的关键字中的\"CSS媒体查询\"又是什么？\n当我们谈到设备的视口宽度时,我们是在谈论用户\"通过浏览器或应用看到的可见区域的大小\"。视口不一定等于屏幕的物理大小,因为\n用户可能会调整浏览器窗口的大小或者旋转设备,从而改变视口的大小。\n\nCSS媒体查询则是一种用于\"适应不同类型的设备和屏幕尺寸的技术\"。通过CSS媒体查询,可以定义一组CSS样式规则,并指定它们应该\n在哪些条件下被应用。例如,可能想要在手机屏幕上使用不同的字体大小,或者在平板电脑上改变布局。\n\n下面是一些CSS媒体查询的常见使用场景：\n◉ 设备类型: 通过使用print或screen等媒体类型,可以针对打印页面或屏幕显示定义不同的样式。\n◉ 视口宽度和高度: 通过设置像(max-width: 768px)或(min-height: 400px)这样的条件,可以根据视口的大小应用不同的样式。\n◉ 方向: 可以检测设备是否处于横向或纵向模式,并据此更改样式。\n◉ 分辨率: 根据屏幕或打印设备的分辨率来应用样式。\n\n媒体查询使开发者能够创建响应式的设计,无论用户在什么样的设备或屏幕尺寸上查看,都能确保内容以最佳的方式呈现。在现今多种设备\n访问网页的环境下,这成为了前端开发的重要部分。\n-->\n<template>\n  <div class=\"container\">\n    <h1>登录|注册</h1>\n    <div class=\"form-container\">\n      <div class=\"form-group\">\n        <label for=\"username\">用户名：</label>\n        <input type=\"text\" id=\"username\" v-model=\"username\" placeholder=\"请输入用户名\"/>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">密码：</label>\n        <input type=\"password\" id=\"password\" v-model=\"password\" placeholder=\"请输入密码\"/>\n      </div>\n      <div class=\"button-container\">\n        <button type=\"button\" @click=\"login\">登录</button>\n        <button type=\"button\" @click=\"register\">注册</button>\n      </div>\n      <p class=\"result-message\">{{ resultMsg }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\"\n// import \"./sharedStyles.css\"\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      resultMsg: \"\"\n    }\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post(\"http://localhost:8000/login/\", {\n          username: this.username,\n          password: this.password\n        })\n        this.resultMsg = response.data.msg\n      } catch (error) {\n        this.resultMsg = error.response.data.detail\n      }\n    },\n    async register() {\n      try {\n        const response = await axios.post(\"http://localhost:8000/users/\", {\n          username: this.username,\n          password: this.password\n        })\n        if (response.status === 200) {\n          this.resultMsg = \"注册成功\"\n        }\n      } catch (error) {\n        this.resultMsg = error.response.data.detail\n      }\n    }\n  }\n}\n</script>\n"],"mappings":";;EA0GOA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAc,YAAV,OAAK;;EACJD,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAY;gCACrBC,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAU,GAAC,MAAI;;EAGvBF,KAAK,EAAC;AAAY;gCACrBC,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAU,GAAC,KAAG;;EAGtBF,KAAK,EAAC;AAAkB;;EAI1BA,KAAK,EAAC;AAAgB;;uBAf7BG,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJC,UAAc,EACdJ,mBAAA,CAcM,OAdNK,UAcM,GAbJL,mBAAA,CAGM,OAHNM,UAGM,GAFJC,UAAkC,E,gBAClCP,mBAAA,CAA0E;IAAnEQ,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,UAAU;+DAAUC,KAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAtBH,KAAA,CAAAC,QAAQ,E,KAEpDX,mBAAA,CAGM,OAHNc,UAGM,GAFJC,UAAiC,E,gBACjCf,mBAAA,CAA6E;IAAtEQ,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,UAAU;+DAAUC,KAAA,CAAAM,QAAQ,GAAAJ,MAAA;IAAEC,WAAW,EAAC;iDAAtBH,KAAA,CAAAM,QAAQ,E,KAExDhB,mBAAA,CAGM,OAHNiB,UAGM,GAFJjB,mBAAA,CAAgD;IAAxCQ,IAAI,EAAC,QAAQ;IAAEU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;KAAE,IAAE,GACvCpB,mBAAA,CAAmD;IAA3CQ,IAAI,EAAC,QAAQ;IAAEU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,QAAA,IAAAF,QAAA,CAAAE,QAAA,IAAAH,IAAA,CAAQ;KAAE,IAAE,E,GAE5CpB,mBAAA,CAA6C,KAA7CwB,UAA6C,EAAAC,gBAAA,CAAhBf,KAAA,CAAAgB,SAAS,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}